// Code generated by protoc-gen-go. DO NOT EDIT.
// source: OffenceSnapData.proto

package units

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlateInfoModel struct {
	PlateType            *string  `protobuf:"bytes,1,req,name=PlateType" json:"PlateType,omitempty"`
	Color                *string  `protobuf:"bytes,2,req,name=Color" json:"Color,omitempty"`
	Bright               *int32   `protobuf:"varint,3,req,name=Bright" json:"Bright,omitempty"`
	LicenseLen           *int32   `protobuf:"varint,4,req,name=LicenseLen" json:"LicenseLen,omitempty"`
	Country              *int32   `protobuf:"varint,5,req,name=Country" json:"Country,omitempty"`
	License              *string  `protobuf:"bytes,6,req,name=License" json:"License,omitempty"`
	Believe              *string  `protobuf:"bytes,7,req,name=Believe" json:"Believe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlateInfoModel) Reset()         { *m = PlateInfoModel{} }
func (m *PlateInfoModel) String() string { return proto.CompactTextString(m) }
func (*PlateInfoModel) ProtoMessage()    {}
func (*PlateInfoModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_701673d0eb3217ad, []int{0}
}

func (m *PlateInfoModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlateInfoModel.Unmarshal(m, b)
}
func (m *PlateInfoModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlateInfoModel.Marshal(b, m, deterministic)
}
func (m *PlateInfoModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlateInfoModel.Merge(m, src)
}
func (m *PlateInfoModel) XXX_Size() int {
	return xxx_messageInfo_PlateInfoModel.Size(m)
}
func (m *PlateInfoModel) XXX_DiscardUnknown() {
	xxx_messageInfo_PlateInfoModel.DiscardUnknown(m)
}

var xxx_messageInfo_PlateInfoModel proto.InternalMessageInfo

func (m *PlateInfoModel) GetPlateType() string {
	if m != nil && m.PlateType != nil {
		return *m.PlateType
	}
	return ""
}

func (m *PlateInfoModel) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

func (m *PlateInfoModel) GetBright() int32 {
	if m != nil && m.Bright != nil {
		return *m.Bright
	}
	return 0
}

func (m *PlateInfoModel) GetLicenseLen() int32 {
	if m != nil && m.LicenseLen != nil {
		return *m.LicenseLen
	}
	return 0
}

func (m *PlateInfoModel) GetCountry() int32 {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return 0
}

func (m *PlateInfoModel) GetLicense() string {
	if m != nil && m.License != nil {
		return *m.License
	}
	return ""
}

func (m *PlateInfoModel) GetBelieve() string {
	if m != nil && m.Believe != nil {
		return *m.Believe
	}
	return ""
}

type VehicleInfoModel struct {
	Index                *int32   `protobuf:"varint,1,req,name=Index" json:"Index,omitempty"`
	VehicleType          *int32   `protobuf:"varint,2,req,name=VehicleType" json:"VehicleType,omitempty"`
	ColorDepth           *int32   `protobuf:"varint,3,req,name=ColorDepth" json:"ColorDepth,omitempty"`
	Color                *string  `protobuf:"bytes,4,req,name=Color" json:"Color,omitempty"`
	Speed                *float32 `protobuf:"fixed32,5,req,name=Speed" json:"Speed,omitempty"`
	Length               *float32 `protobuf:"fixed32,6,req,name=Length" json:"Length,omitempty"`
	IllegalType          *int32   `protobuf:"varint,7,req,name=IllegalType" json:"IllegalType,omitempty"`
	VehicleLogoRecog     *string  `protobuf:"bytes,8,req,name=VehicleLogoRecog" json:"VehicleLogoRecog,omitempty"`
	VehicleSubLogoRecog  *string  `protobuf:"bytes,9,req,name=VehicleSubLogoRecog" json:"VehicleSubLogoRecog,omitempty"`
	VehicleModel         *string  `protobuf:"bytes,10,req,name=VehicleModel" json:"VehicleModel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleInfoModel) Reset()         { *m = VehicleInfoModel{} }
func (m *VehicleInfoModel) String() string { return proto.CompactTextString(m) }
func (*VehicleInfoModel) ProtoMessage()    {}
func (*VehicleInfoModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_701673d0eb3217ad, []int{1}
}

func (m *VehicleInfoModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleInfoModel.Unmarshal(m, b)
}
func (m *VehicleInfoModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleInfoModel.Marshal(b, m, deterministic)
}
func (m *VehicleInfoModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleInfoModel.Merge(m, src)
}
func (m *VehicleInfoModel) XXX_Size() int {
	return xxx_messageInfo_VehicleInfoModel.Size(m)
}
func (m *VehicleInfoModel) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleInfoModel.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleInfoModel proto.InternalMessageInfo

func (m *VehicleInfoModel) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *VehicleInfoModel) GetVehicleType() int32 {
	if m != nil && m.VehicleType != nil {
		return *m.VehicleType
	}
	return 0
}

func (m *VehicleInfoModel) GetColorDepth() int32 {
	if m != nil && m.ColorDepth != nil {
		return *m.ColorDepth
	}
	return 0
}

func (m *VehicleInfoModel) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

func (m *VehicleInfoModel) GetSpeed() float32 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return 0
}

func (m *VehicleInfoModel) GetLength() float32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *VehicleInfoModel) GetIllegalType() int32 {
	if m != nil && m.IllegalType != nil {
		return *m.IllegalType
	}
	return 0
}

func (m *VehicleInfoModel) GetVehicleLogoRecog() string {
	if m != nil && m.VehicleLogoRecog != nil {
		return *m.VehicleLogoRecog
	}
	return ""
}

func (m *VehicleInfoModel) GetVehicleSubLogoRecog() string {
	if m != nil && m.VehicleSubLogoRecog != nil {
		return *m.VehicleSubLogoRecog
	}
	return ""
}

func (m *VehicleInfoModel) GetVehicleModel() string {
	if m != nil && m.VehicleModel != nil {
		return *m.VehicleModel
	}
	return ""
}

type PlateRectModel struct {
	X                    *int32   `protobuf:"varint,1,req,name=X" json:"X,omitempty"`
	Y                    *int32   `protobuf:"varint,2,req,name=Y" json:"Y,omitempty"`
	Width                *int32   `protobuf:"varint,3,req,name=Width" json:"Width,omitempty"`
	Height               *int32   `protobuf:"varint,4,req,name=Height" json:"Height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlateRectModel) Reset()         { *m = PlateRectModel{} }
func (m *PlateRectModel) String() string { return proto.CompactTextString(m) }
func (*PlateRectModel) ProtoMessage()    {}
func (*PlateRectModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_701673d0eb3217ad, []int{2}
}

func (m *PlateRectModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlateRectModel.Unmarshal(m, b)
}
func (m *PlateRectModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlateRectModel.Marshal(b, m, deterministic)
}
func (m *PlateRectModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlateRectModel.Merge(m, src)
}
func (m *PlateRectModel) XXX_Size() int {
	return xxx_messageInfo_PlateRectModel.Size(m)
}
func (m *PlateRectModel) XXX_DiscardUnknown() {
	xxx_messageInfo_PlateRectModel.DiscardUnknown(m)
}

var xxx_messageInfo_PlateRectModel proto.InternalMessageInfo

func (m *PlateRectModel) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *PlateRectModel) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *PlateRectModel) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *PlateRectModel) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

type PicInfoModel struct {
	Type                 *int32          `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`
	PicRecogMode         *int32          `protobuf:"varint,2,req,name=PicRecogMode" json:"PicRecogMode,omitempty"`
	RedLightTime         *int32          `protobuf:"varint,3,req,name=RedLightTime" json:"RedLightTime,omitempty"`
	PlateRect            *PlateRectModel `protobuf:"bytes,4,req,name=PlateRect" json:"PlateRect,omitempty"`
	Data                 []byte          `protobuf:"bytes,5,req,name=Data" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PicInfoModel) Reset()         { *m = PicInfoModel{} }
func (m *PicInfoModel) String() string { return proto.CompactTextString(m) }
func (*PicInfoModel) ProtoMessage()    {}
func (*PicInfoModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_701673d0eb3217ad, []int{3}
}

func (m *PicInfoModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicInfoModel.Unmarshal(m, b)
}
func (m *PicInfoModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicInfoModel.Marshal(b, m, deterministic)
}
func (m *PicInfoModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicInfoModel.Merge(m, src)
}
func (m *PicInfoModel) XXX_Size() int {
	return xxx_messageInfo_PicInfoModel.Size(m)
}
func (m *PicInfoModel) XXX_DiscardUnknown() {
	xxx_messageInfo_PicInfoModel.DiscardUnknown(m)
}

var xxx_messageInfo_PicInfoModel proto.InternalMessageInfo

func (m *PicInfoModel) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *PicInfoModel) GetPicRecogMode() int32 {
	if m != nil && m.PicRecogMode != nil {
		return *m.PicRecogMode
	}
	return 0
}

func (m *PicInfoModel) GetRedLightTime() int32 {
	if m != nil && m.RedLightTime != nil {
		return *m.RedLightTime
	}
	return 0
}

func (m *PicInfoModel) GetPlateRect() *PlateRectModel {
	if m != nil {
		return m.PlateRect
	}
	return nil
}

func (m *PicInfoModel) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type OffenceSnapData struct {
	Id                   *string           `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	DriveChan            *int32            `protobuf:"varint,2,req,name=DriveChan" json:"DriveChan,omitempty"`
	VehicleType          *int32            `protobuf:"varint,3,req,name=VehicleType" json:"VehicleType,omitempty"`
	VehicleAttribute     *int32            `protobuf:"varint,4,req,name=VehicleAttribute" json:"VehicleAttribute,omitempty"`
	IllegalType          *int32            `protobuf:"varint,5,req,name=IllegalType" json:"IllegalType,omitempty"`
	IllegalSubType       *string           `protobuf:"bytes,6,req,name=IllegalSubType" json:"IllegalSubType,omitempty"`
	PostPicNo            *int32            `protobuf:"varint,7,req,name=PostPicNo" json:"PostPicNo,omitempty"`
	ChanIndex            *int32            `protobuf:"varint,8,req,name=ChanIndex" json:"ChanIndex,omitempty"`
	SpeedLimit           *int32            `protobuf:"varint,9,req,name=SpeedLimit" json:"SpeedLimit,omitempty"`
	PlateInfo            *PlateInfoModel   `protobuf:"bytes,10,req,name=PlateInfo" json:"PlateInfo,omitempty"`
	VehicleInfo          *VehicleInfoModel `protobuf:"bytes,11,req,name=VehicleInfo" json:"VehicleInfo,omitempty"`
	MonitoringSiteID     *string           `protobuf:"bytes,12,req,name=MonitoringSiteID" json:"MonitoringSiteID,omitempty"`
	Dir                  *int32            `protobuf:"varint,13,req,name=Dir" json:"Dir,omitempty"`
	DetectType           *int32            `protobuf:"varint,14,req,name=DetectType" json:"DetectType,omitempty"`
	PilotSafebelt        *int32            `protobuf:"varint,15,req,name=PilotSafebelt" json:"PilotSafebelt,omitempty"`
	CopilotSafebelt      *int32            `protobuf:"varint,16,req,name=CopilotSafebelt" json:"CopilotSafebelt,omitempty"`
	PilotSubVisor        *int32            `protobuf:"varint,17,req,name=PilotSubVisor" json:"PilotSubVisor,omitempty"`
	CopilotSubVisor      *int32            `protobuf:"varint,18,req,name=CopilotSubVisor" json:"CopilotSubVisor,omitempty"`
	PilotCall            *int32            `protobuf:"varint,19,req,name=PilotCall" json:"PilotCall,omitempty"`
	AlarmDataType        *int32            `protobuf:"varint,20,req,name=AlarmDataType" json:"AlarmDataType,omitempty"`
	LlegalTime           *string           `protobuf:"bytes,21,req,name=llegalTime" json:"llegalTime,omitempty"`
	IllegalTimer         *int32            `protobuf:"varint,22,req,name=IllegalTimer" json:"IllegalTimer,omitempty"`
	PicNum               *int32            `protobuf:"varint,23,req,name=PicNum" json:"PicNum,omitempty"`
	PicInfo              []*PicInfoModel   `protobuf:"bytes,24,rep,name=PicInfo" json:"PicInfo,omitempty"`
	Validity             *int32            `protobuf:"varint,25,opt,name=Validity" json:"Validity,omitempty"`
	WaitedLength         *int32            `protobuf:"varint,26,opt,name=WaitedLength" json:"WaitedLength,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OffenceSnapData) Reset()         { *m = OffenceSnapData{} }
func (m *OffenceSnapData) String() string { return proto.CompactTextString(m) }
func (*OffenceSnapData) ProtoMessage()    {}
func (*OffenceSnapData) Descriptor() ([]byte, []int) {
	return fileDescriptor_701673d0eb3217ad, []int{4}
}

func (m *OffenceSnapData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OffenceSnapData.Unmarshal(m, b)
}
func (m *OffenceSnapData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OffenceSnapData.Marshal(b, m, deterministic)
}
func (m *OffenceSnapData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OffenceSnapData.Merge(m, src)
}
func (m *OffenceSnapData) XXX_Size() int {
	return xxx_messageInfo_OffenceSnapData.Size(m)
}
func (m *OffenceSnapData) XXX_DiscardUnknown() {
	xxx_messageInfo_OffenceSnapData.DiscardUnknown(m)
}

var xxx_messageInfo_OffenceSnapData proto.InternalMessageInfo

func (m *OffenceSnapData) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *OffenceSnapData) GetDriveChan() int32 {
	if m != nil && m.DriveChan != nil {
		return *m.DriveChan
	}
	return 0
}

func (m *OffenceSnapData) GetVehicleType() int32 {
	if m != nil && m.VehicleType != nil {
		return *m.VehicleType
	}
	return 0
}

func (m *OffenceSnapData) GetVehicleAttribute() int32 {
	if m != nil && m.VehicleAttribute != nil {
		return *m.VehicleAttribute
	}
	return 0
}

func (m *OffenceSnapData) GetIllegalType() int32 {
	if m != nil && m.IllegalType != nil {
		return *m.IllegalType
	}
	return 0
}

func (m *OffenceSnapData) GetIllegalSubType() string {
	if m != nil && m.IllegalSubType != nil {
		return *m.IllegalSubType
	}
	return ""
}

func (m *OffenceSnapData) GetPostPicNo() int32 {
	if m != nil && m.PostPicNo != nil {
		return *m.PostPicNo
	}
	return 0
}

func (m *OffenceSnapData) GetChanIndex() int32 {
	if m != nil && m.ChanIndex != nil {
		return *m.ChanIndex
	}
	return 0
}

func (m *OffenceSnapData) GetSpeedLimit() int32 {
	if m != nil && m.SpeedLimit != nil {
		return *m.SpeedLimit
	}
	return 0
}

func (m *OffenceSnapData) GetPlateInfo() *PlateInfoModel {
	if m != nil {
		return m.PlateInfo
	}
	return nil
}

func (m *OffenceSnapData) GetVehicleInfo() *VehicleInfoModel {
	if m != nil {
		return m.VehicleInfo
	}
	return nil
}

func (m *OffenceSnapData) GetMonitoringSiteID() string {
	if m != nil && m.MonitoringSiteID != nil {
		return *m.MonitoringSiteID
	}
	return ""
}

func (m *OffenceSnapData) GetDir() int32 {
	if m != nil && m.Dir != nil {
		return *m.Dir
	}
	return 0
}

func (m *OffenceSnapData) GetDetectType() int32 {
	if m != nil && m.DetectType != nil {
		return *m.DetectType
	}
	return 0
}

func (m *OffenceSnapData) GetPilotSafebelt() int32 {
	if m != nil && m.PilotSafebelt != nil {
		return *m.PilotSafebelt
	}
	return 0
}

func (m *OffenceSnapData) GetCopilotSafebelt() int32 {
	if m != nil && m.CopilotSafebelt != nil {
		return *m.CopilotSafebelt
	}
	return 0
}

func (m *OffenceSnapData) GetPilotSubVisor() int32 {
	if m != nil && m.PilotSubVisor != nil {
		return *m.PilotSubVisor
	}
	return 0
}

func (m *OffenceSnapData) GetCopilotSubVisor() int32 {
	if m != nil && m.CopilotSubVisor != nil {
		return *m.CopilotSubVisor
	}
	return 0
}

func (m *OffenceSnapData) GetPilotCall() int32 {
	if m != nil && m.PilotCall != nil {
		return *m.PilotCall
	}
	return 0
}

func (m *OffenceSnapData) GetAlarmDataType() int32 {
	if m != nil && m.AlarmDataType != nil {
		return *m.AlarmDataType
	}
	return 0
}

func (m *OffenceSnapData) GetLlegalTime() string {
	if m != nil && m.LlegalTime != nil {
		return *m.LlegalTime
	}
	return ""
}

func (m *OffenceSnapData) GetIllegalTimer() int32 {
	if m != nil && m.IllegalTimer != nil {
		return *m.IllegalTimer
	}
	return 0
}

func (m *OffenceSnapData) GetPicNum() int32 {
	if m != nil && m.PicNum != nil {
		return *m.PicNum
	}
	return 0
}

func (m *OffenceSnapData) GetPicInfo() []*PicInfoModel {
	if m != nil {
		return m.PicInfo
	}
	return nil
}

func (m *OffenceSnapData) GetValidity() int32 {
	if m != nil && m.Validity != nil {
		return *m.Validity
	}
	return 0
}

func (m *OffenceSnapData) GetWaitedLength() int32 {
	if m != nil && m.WaitedLength != nil {
		return *m.WaitedLength
	}
	return 0
}

func init() {
	proto.RegisterType((*PlateInfoModel)(nil), "PlateInfoModel")
	proto.RegisterType((*VehicleInfoModel)(nil), "VehicleInfoModel")
	proto.RegisterType((*PlateRectModel)(nil), "PlateRectModel")
	proto.RegisterType((*PicInfoModel)(nil), "PicInfoModel")
	proto.RegisterType((*OffenceSnapData)(nil), "OffenceSnapData")
}

func init() { proto.RegisterFile("OffenceSnapData.proto", fileDescriptor_701673d0eb3217ad) }

var fileDescriptor_701673d0eb3217ad = []byte{
	// 752 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x54, 0xdb, 0x6e, 0x1a, 0x49,
	0x10, 0x15, 0x83, 0xc7, 0xd8, 0x0d, 0x06, 0xbb, 0x8d, 0xbd, 0xbd, 0xd6, 0x6a, 0x85, 0xd0, 0x6a,
	0x17, 0xad, 0x14, 0x14, 0x39, 0x5f, 0x60, 0xc3, 0x43, 0x90, 0x70, 0x82, 0x1a, 0xcb, 0x97, 0xbc,
	0x0d, 0x33, 0x05, 0xb4, 0x34, 0x4c, 0xa3, 0x71, 0x63, 0xc5, 0x3f, 0x93, 0x3f, 0xc8, 0x8f, 0xe4,
	0x31, 0x5f, 0x14, 0x55, 0x75, 0x33, 0x17, 0xc8, 0xdb, 0xd4, 0xa9, 0x43, 0x77, 0xd5, 0xe9, 0x73,
	0x60, 0x17, 0x9f, 0xe7, 0x73, 0x48, 0x42, 0x98, 0x26, 0xc1, 0x7a, 0x18, 0x98, 0xa0, 0xbf, 0x4e,
	0xb5, 0xd1, 0xdd, 0x1f, 0x15, 0xd6, 0x9c, 0xc4, 0x81, 0x81, 0x51, 0x32, 0xd7, 0x77, 0x3a, 0x82,
	0x98, 0xff, 0xc5, 0x8e, 0x09, 0xb9, 0x7f, 0x5b, 0x83, 0xa8, 0x74, 0xbc, 0xde, 0xb1, 0xcc, 0x01,
	0xde, 0x66, 0xfe, 0x40, 0xc7, 0x3a, 0x15, 0x1e, 0x75, 0x6c, 0xc1, 0x2f, 0xd9, 0xe1, 0x6d, 0xaa,
	0x16, 0x4b, 0x23, 0xaa, 0x1d, 0xaf, 0xe7, 0x4b, 0x57, 0xf1, 0xbf, 0x19, 0x1b, 0xab, 0x10, 0x92,
	0x17, 0x18, 0x43, 0x22, 0x0e, 0xa8, 0x57, 0x40, 0xb8, 0x60, 0xb5, 0x81, 0xde, 0x24, 0x26, 0x7d,
	0x13, 0x3e, 0x35, 0xb7, 0x25, 0x76, 0x1c, 0x4f, 0x1c, 0xd2, 0x4d, 0xdb, 0x12, 0x3b, 0xb7, 0x10,
	0x2b, 0x78, 0x05, 0x51, 0xb3, 0x1d, 0x57, 0x76, 0x7f, 0x7a, 0xec, 0xf4, 0x01, 0x96, 0x2a, 0x8c,
	0x0b, 0xeb, 0xb4, 0x99, 0x3f, 0x4a, 0x22, 0xf8, 0x4a, 0xab, 0xf8, 0xd2, 0x16, 0xbc, 0xc3, 0xea,
	0x8e, 0x49, 0x6b, 0x7a, 0xd4, 0x2b, 0x42, 0x38, 0x3a, 0xed, 0x36, 0x84, 0xb5, 0x59, 0xba, 0xb5,
	0x0a, 0x48, 0x2e, 0xc4, 0x41, 0x51, 0x88, 0x36, 0xf3, 0xa7, 0x6b, 0x80, 0x88, 0xd6, 0xf1, 0xa4,
	0x2d, 0x50, 0x9e, 0x31, 0x24, 0x0b, 0xb3, 0xa4, 0x5d, 0x3c, 0xe9, 0x2a, 0x9c, 0x62, 0x14, 0xc7,
	0xb0, 0x08, 0x62, 0x9a, 0xa2, 0x66, 0xa7, 0x28, 0x40, 0xfc, 0xff, 0x6c, 0xa3, 0xb1, 0x5e, 0x68,
	0x09, 0xa1, 0x5e, 0x88, 0x23, 0xba, 0x70, 0x0f, 0xe7, 0xef, 0xd9, 0xb9, 0xc3, 0xa6, 0x9b, 0x59,
	0x4e, 0x3f, 0x26, 0xfa, 0xef, 0x5a, 0xbc, 0xcb, 0x1a, 0x0e, 0x26, 0xad, 0x04, 0x23, 0x6a, 0x09,
	0xeb, 0x7e, 0x71, 0x06, 0x91, 0x10, 0x1a, 0xab, 0x68, 0x83, 0x55, 0x9e, 0x9c, 0x9a, 0x95, 0x27,
	0xac, 0x9e, 0x9d, 0x7e, 0x95, 0x67, 0xdc, 0xff, 0x51, 0x45, 0x99, 0x60, 0xb6, 0xc0, 0xfd, 0x3f,
	0x02, 0xd9, 0xc3, 0x5a, 0xc0, 0x55, 0xdd, 0xef, 0x15, 0xd6, 0x98, 0xa8, 0x30, 0x7f, 0x2c, 0xce,
	0x0e, 0x32, 0xdb, 0xf9, 0x92, 0xbe, 0x71, 0xc8, 0x89, 0x0a, 0x69, 0x60, 0x24, 0xb9, 0xbb, 0x4a,
	0x18, 0x72, 0x24, 0x44, 0x63, 0x3c, 0xf4, 0x5e, 0xad, 0xc0, 0xdd, 0x5e, 0xc2, 0xf8, 0x3b, 0xe7,
	0x6b, 0x5c, 0x84, 0xe6, 0xa8, 0x5f, 0xb7, 0xfa, 0xe5, 0xd5, 0x64, 0xce, 0xc0, 0x51, 0x30, 0x27,
	0xf4, 0x90, 0x0d, 0x49, 0xdf, 0xdd, 0x6f, 0x35, 0xd6, 0xda, 0xc9, 0x11, 0x6f, 0x32, 0x6f, 0x14,
	0xb9, 0x9c, 0x78, 0xa3, 0x08, 0xe3, 0x33, 0x4c, 0xd5, 0x2b, 0x0c, 0x96, 0x41, 0xe2, 0x66, 0xcd,
	0x81, 0x5d, 0xdf, 0x55, 0xf7, 0x7d, 0x97, 0xbf, 0xf8, 0x8d, 0x31, 0xa9, 0x9a, 0x6d, 0x0c, 0x38,
	0xd5, 0xf6, 0xf0, 0x5d, 0xff, 0xf8, 0xfb, 0xfe, 0xf9, 0x97, 0x35, 0x5d, 0x39, 0xdd, 0xcc, 0x88,
	0x64, 0xd3, 0xb4, 0x83, 0x52, 0xe8, 0xf5, 0x8b, 0x99, 0xa8, 0xf0, 0x93, 0x76, 0x3e, 0xcc, 0x01,
	0xec, 0xe2, 0xf4, 0x36, 0x47, 0x47, 0xb6, 0x9b, 0x01, 0x98, 0x14, 0xb2, 0xf9, 0x58, 0xad, 0x94,
	0x21, 0xbb, 0xf9, 0xb2, 0x80, 0x64, 0xc2, 0xe3, 0x33, 0x93, 0xc5, 0x32, 0xe1, 0xb3, 0x87, 0x97,
	0x39, 0x83, 0x7f, 0xc8, 0x24, 0xa2, 0x1f, 0xd4, 0xe9, 0x07, 0x67, 0xfd, 0xdd, 0x60, 0xcb, 0x22,
	0x0b, 0x55, 0xbb, 0xd3, 0x89, 0x32, 0x3a, 0x55, 0xc9, 0x62, 0xaa, 0x0c, 0x8c, 0x86, 0xa2, 0x61,
	0x73, 0xb2, 0x8b, 0xf3, 0x53, 0x56, 0x1d, 0xaa, 0x54, 0x9c, 0xd0, 0xa0, 0xf8, 0x89, 0x1b, 0x0c,
	0xc1, 0x40, 0x68, 0x48, 0xa1, 0xa6, 0xdd, 0x20, 0x47, 0xf8, 0x3f, 0xec, 0x64, 0xa2, 0x62, 0x6d,
	0xa6, 0xc1, 0x1c, 0x66, 0x10, 0x1b, 0xd1, 0x22, 0x4a, 0x19, 0xe4, 0x3d, 0xd6, 0x1a, 0xe8, 0x75,
	0x89, 0x77, 0x4a, 0xbc, 0x5d, 0x38, 0x3f, 0x6f, 0x33, 0x7b, 0x50, 0x2f, 0x3a, 0x15, 0x67, 0xc5,
	0xf3, 0x1c, 0x58, 0x3c, 0x6f, 0xcb, 0xe3, 0xe5, 0xf3, 0xb6, 0x4c, 0x7c, 0x3d, 0x04, 0x06, 0x41,
	0x1c, 0x8b, 0x73, 0xf7, 0x7a, 0x5b, 0x00, 0x6f, 0xbb, 0x89, 0x83, 0x74, 0x85, 0x76, 0xa5, 0x05,
	0xdb, 0xf6, 0xb6, 0x12, 0x88, 0x1a, 0x38, 0xdf, 0x60, 0x80, 0x2e, 0x48, 0xbb, 0x02, 0x82, 0x11,
	0x1b, 0xe5, 0x65, 0x2a, 0x2e, 0x6d, 0xc4, 0x8a, 0x18, 0xe6, 0x1c, 0x0d, 0xb3, 0x59, 0x89, 0x3f,
	0x6c, 0xce, 0x6d, 0xc5, 0xff, 0x63, 0x35, 0x17, 0x73, 0x21, 0x3a, 0xd5, 0x5e, 0xfd, 0xfa, 0xa4,
	0x5f, 0x8c, 0xbd, 0xdc, 0x76, 0xf9, 0x15, 0x3b, 0x7a, 0x08, 0x62, 0x15, 0x29, 0xf3, 0x26, 0xfe,
	0xec, 0x54, 0x7a, 0xbe, 0xcc, 0x6a, 0x1c, 0xe0, 0x31, 0x50, 0x06, 0x22, 0xf7, 0x57, 0x7a, 0x45,
	0xfd, 0x12, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x7d, 0x10, 0x6a, 0xe6, 0x06, 0x00, 0x00,
}
